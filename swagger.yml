swagger: "2.0"
info:
  version: 1.0.0
  title: Gym Badges API

tags:
  - name: Login
    description: Endpoints responsible for login operations.

paths:
  # -----------------------------------------------------
  # AUTHENTICATION
  # -----------------------------------------------------

  /login:
    post:
      operationId: login
      tags:
        - Login
      produces:
        - application/json
      parameters:
        - name: input
          description: Data required for login
          in: body
          required: true
          schema:
            $ref: "#/definitions/login_request_body"
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/login_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  /login-with-token:
    get:
      operationId: loginWithToken
      tags:
        - LoginWithToken
      produces:
        - application/json
      parameters:
        - name: auth_user_id
          in: header
          required: true
          type: string
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object

  # -----------------------------------------------------
  # USERS
  # -----------------------------------------------------

  /user/{user_id}:
    get:
      operationId: getUserInfo
      summary: Find user by ID
      tags:
        - User
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User's id you want to get.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/get_user_info_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    put:
      operationId: editUserInfo
      summary: Edit user information.
      tags:
        - User
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: New user information.
          in: body
          required: true
          schema:
            $ref: "#/definitions/edit_user_info_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/get_user_info_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  /user:
    post:
      operationId: createUser
      summary: Create user
      tags:
        - User
      produces:
        - application/json
      parameters:
        - name: input
          description: Data required for login
          in: body
          required: true
          schema:
            $ref: "#/definitions/create_user_request"
      responses:
        201:
          description: Success Response
          schema:
            $ref: "#/definitions/login_response"
        409:
          description: Conflict Error
          schema:
            $ref: "#/definitions/generic_response"
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  # -----------------------------------------------------
  # STATS
  # -----------------------------------------------------

  /stats/weight/{user_id}:
    get:
      operationId: getWeightHistoryByUserID
      summary: Get weight history by user_id
      tags:
        - Stats
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User's id you want to get.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: months
          in: query
          description: Number of months to be consulted. To return all use 0
          required: true
          type: integer
          format: int32
          enum:
            - 0
            - 3
            - 6
            - 12
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/measurement_history_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    post:
      operationId: AddWeight
      summary: Adds a new weight with today's date.
      tags:
        - Stats
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: New weight.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_weight_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  /stats/streak/{user_id}:
    get:
      operationId: getStreakCalendarByUserID
      summary: Get streak calendar by user_id
      tags:
        - Stats
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User's id you want to get.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: month
          in: query
          description: Month to be consulted.
          required: true
          type: integer
          format: int32
        - name: year
          in: query
          description: Year to be consulted.
          required: true
          type: integer
          format: int32
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/streak_calendar_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    post:
      operationId: AddGymAttendance
      summary: Adds a day as attended.
      tags:
        - Stats
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: Date to be added as attended.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_delete_day_to_streak_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        400:
          description: Bad Request Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the bad request error response object
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    delete:
      operationId: DeleteGymAttendance
      summary: Deletes a day as attended.
      tags:
        - Stats
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: Date to be deleted as attended.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_delete_day_to_streak_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  /stats/fat/{user_id}:
    get:
      operationId: getFatHistoryByUserID
      summary: Get fat history by user_id
      tags:
        - Stats
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User's id you want to get.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: months
          in: query
          description: Number of months to be consulted. To return all use 0
          required: true
          type: integer
          format: int32
          enum:
            - 0
            - 3
            - 6
            - 12
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/measurement_history_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    post:
      operationId: AddBodyFat
      summary: Adds a new body fat with today's date.
      tags:
        - Stats
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: New body fat.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_body_fat_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  # -----------------------------------------------------
  # FRIENDS
  # -----------------------------------------------------

  /friends/{user_id}:
    get:
      operationId: getFriendsByUserID
      summary: Get friends info by user_id
      tags:
        - Friends
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User's id you want to get.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: page
          in: query
          description: Friends list pagination (1-based).
          required: true
          type: integer
          format: int32
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/friends_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    post:
      operationId: AddFriend
      summary: Makes user_id and friend_id friends.
      tags:
        - Friends
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: Friend's user id.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_delete_friend_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/friend_info"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    delete:
      operationId: DeleteFriend
      summary: Makes user_id and friend_id no longer friends.
      tags:
        - Friends
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: Friend's user id.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_delete_friend_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  # -----------------------------------------------------
  # BADGES
  # -----------------------------------------------------

  /badges/{user_id}:
    get:
      operationId: getBadgesByUserID
      summary: Get badges info by user_id
      tags:
        - Badges
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User's id you want to get.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/badges_by_user_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    post:
      operationId: AddBadge
      summary: Marks a badge as achieved.
      tags:
        - Badges
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: Badge to mark as achieved.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_delete_badge_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        403:
          description: Forbidden error. Returned when user doesn't have the parent badge.
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the forbidden error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

    delete:
      operationId: DeleteBadge
      summary: Unmarks a badge as achieved.
      tags:
        - Badges
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: Your own user id.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: input
          description: Badge to unmark as achieved.
          in: body
          required: true
          schema:
            $ref: "#/definitions/add_delete_badge_request"
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        403:
          description: Forbidden error. Returned when user doesn't have the parent badge.
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the forbidden error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

  # -----------------------------------------------------
  # RANKINGS
  # -----------------------------------------------------

  /rankings/global/{user_id}:
    get:
      operationId: getGlobalRanking
      summary: Get global ranking.
      tags:
        - Rankings
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: User's id you want to get.
          required: true
          type: string
        - name: auth_user_id
          in: header
          description: Your own user id. For authentication.
          required: true
          type: string
        - name: page
          in: query
          description: Page number for pagination (1-based).
          required: true
          type: integer
          format: int64
      security:
        - jwt: []
      responses:
        200:
          description: Success Response
          schema:
            $ref: "#/definitions/get_ranking_response"
        401:
          description: Unauthorized Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the unauthorized error response object
        404:
          description: Not Found Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the not found error response object
        500:
          description: Unexpected Error
          schema:
            $ref: "#/definitions/generic_response"
            description: Contains the operation error response object

securityDefinitions:
  jwt:
    type: apiKey
    in: header
    name: token

definitions:
  generic_response:
    type: object
    title: Generic Operation Response
    description: Describes the generic result of a request.
    properties:
      code:
        type: string
      message:
        type: string

  login_request_body:
    type: object
    title: Login Response
    description: Describes the login response with the information necessary to maintain the session.
    properties:
      user_id:
        type: string
      password:
        type: string

  login_response:
    type: object
    title: Login Response
    description: Describes the login response with the information necessary to maintain the session.
    properties:
      token:
        type: string

  get_user_info_response:
    type: object
    title: User info response
    properties:
      user_id:
        type: string
        x-omitempty: false
      body_fat:
        type: number
        format: float
        x-nullable: true
        x-omitempty: false
      current_week:
        type: array
        items:
          type: boolean
        x-omitempty: false
      experience:
        type: integer
        format: int64
        x-omitempty: false
      image:
        type: string
        format: byte
        x-omitempty: false
      name:
        type: string
        x-omitempty: false
      preferences:
        type: array
        items:
          $ref: "#/definitions/preference"
        x-omitempty: false
      streak:
        type: integer
        format: int32
        x-omitempty: false
      top_feats:
        type: array
        items:
          $ref: "#/definitions/feat"
        x-omitempty: false
      weekly_goal:
        type: number
        format: int32
        x-omitempty: false
      weight:
        type: number
        format: float
        x-nullable: true
        x-omitempty: false

  edit_user_info_request:
    type: object
    title: Edit user information request
    properties:
      email:
        type: string
        x-omitempty: false
      image:
        type: string
        format: byte
        x-omitempty: false
      name:
        type: string
        x-omitempty: false
      preferences:
        type: array
        items:
          $ref: "#/definitions/preference"
        x-omitempty: false
      top_feats:
        type: array
        items:
          type: number
          format: int32
        x-nullable: true
        x-omitempty: false
      weekly_goal:
        type: number
        format: int32
        x-omitempty: false

  preference:
    type: object
    title: User preference
    properties:
      preference_id:
        type: number
        format: int32
        x-omitempty: false
      on:
        type: boolean
        x-omitempty: false

  measurement_history_response:
    type: object
    title: Measurement history response
    properties:
      days:
        type: array
        items:
          $ref: "#/definitions/measurement_per_day"

  measurement_per_day:
    type: object
    title: Measurement pre day info
    properties:
      date:
        type: string
        x-omitempty: false
      value:
        type: number
        format: float
        x-omitempty: false

  streak_calendar_response:
    type: object
    title: Streak calendar response
    properties:
      streak:
        type: number
        format: int32
        x-omitempty: false
      weekly_goal:
        type: number
        format: int32
        x-omitempty: false
      days:
        type: array
        items:
          type: string

  friends_response:
    type: object
    title: Friends information list
    properties:
      friends:
        type: array
        items:
          $ref: "#/definitions/friend_info"

  friend_info:
    type: object
    title: Friends information list
    properties:
      name:
        type: string
        x-omitempty: false
      user:
        type: string
        x-omitempty: false
      image:
        type: string
        format: byte
        x-omitempty: false
      level:
        type: number
        format: int32
        x-omitempty: false
      streak:
        type: number
        format: int32
        x-omitempty: false
      weight:
        type: number
        format: float
        x-nullable: true
        x-omitempty: false
      fat:
        type: number
        format: float
        x-nullable: true
        x-omitempty: false
      top_feats:
        type: array
        items:
          $ref: "#/definitions/feat"

  feat:
    type: object
    title: Top Feat info
    properties:
      id:
        type: number
        format: int32
        x-omitempty: false
      name:
        type: string
        x-omitempty: false
      description:
        type: string
        x-omitempty: false
      image:
        type: string
        x-omitempty: false

  create_user_request:
    type: object
    title: Create user request
    properties:
      email:
        type: string
      image:
        type: string
        format: byte
      name:
        type: string
      password:
        type: string
      user_id:
        type: string

  badges_by_user_response:
    title: User badge list response
    type: array
    items:
      $ref: "#/definitions/badge"

  badge:
    type: object
    title: User badge
    properties:
      achieved:
        type: boolean
        x-omitempty: false
      description:
        type: string
        x-omitempty: false
      exp:
        type: number
        format: int64
        x-omitempty: false
      id:
        type: number
        format: int32
        x-omitempty: false
      image:
        type: string
        x-omitempty: false
      name:
        type: string
        x-omitempty: false
      children:
        type: array
        items:
          $ref: "#/definitions/badge"

  add_delete_friend_request:
    type: object
    title: Create user request
    properties:
      friend_id:
        type: string

  add_weight_request:
    type: object
    title: Add weight request
    properties:
      weight:
        type: number
        format: float

  add_body_fat_request:
    type: object
    title: Add weight request
    properties:
      body_fat:
        type: number
        format: float

  add_delete_day_to_streak_request:
    type: object
    title: Add day to streak request
    properties:
      date:
        type: string
        format: date

  add_delete_badge_request:
    type: object
    title: Badge top be marked as achieved.
    properties:
      badge_id:
        type: number
        format: int32

  get_ranking_response:
    type: object
    title: Ranking response
    properties:
      yourself:
        $ref: "#/definitions/raking_user"
      ranking:
        type: array
        x-omitempty: false
        items:
          $ref: "#/definitions/raking_user"

  raking_user:
    type: object
    title: User info in a ranking.
    properties:
      user_id:
        type: string
      name:
        type: string
      image:
        type: string
        format: byte
      level:
        type: number
        format: int64
      streak:
        type: number
        format: int32
      rank:
        type: number
        format: int64
